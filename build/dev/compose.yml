version: '3.9'
networks:
  internal:
    name: "02_dev_network"

services:

  proxy:
    image: "traefik:v2.10"
    container_name: 02_proxy_dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
    - --api.insecure=true
    - --providers.docker=true
    - --providers.docker.exposedbydefault=true
    - --entrypoints.web.address=:80
    ports:
    - 80:80
    networks:
      - internal

  web:
    container_name: django_02_dev
    build:
      context: ../../django
      dockerfile: ./compose/dev/Dockerfile
    env_file:
      - ./conf/django.env
      - ./conf/sql.env
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
      mqtt:
        condition: service_started
    expose:
      - 8000
    labels:
      - traefik.enable=true
      - traefik.http.routers.django_02_dev.rule=Host(`localhost`)
      - traefik.http.routers.django_02_dev.entrypoints=web
      - traefik.http.services.django_02_dev.loadbalancer.server.port=8000

      
  db:
    image: postgres
    container_name: sql_02_dev
    restart: always
    healthcheck:
          test: ["CMD", "pg_isready", "-U", "devs", "-d", "domena_db"]
          interval: 5s
          timeout: 10s
          retries: 120
    networks:
      - internal
    volumes:
      - ./sql/data/:/var/lib/postgresql/data
    env_file:
      - ./conf/sql.env
    expose:
      - 5432

  mqtt:
    image: eclipse-mosquitto:2
    container_name: mqtt_02_dev
    restart: always
    volumes:
      - type: bind 
        source: ./conf/mqtt/config/
        target: /mosquitto/config/
        read_only: true
      - type: bind
        source: ./conf/mqtt/log/
        target: /mosquitto/log/
        read_only: true
    networks:
      - internal
    expose:
      - 9001
    labels:
      - traefik.enable=true
      - traefik.http.routers.mqtt_02_dev.rule=Host(`localhost`)&&PathPrefix(`/broker`)
      - traefik.http.routers.mqtt_02_dev.entrypoints=web
      - traefik.http.services.mqtt_02_dev.loadbalancer.server.port=9001
