version: '3.9'

networks:
  proxy:
    external: true
  internal:
    name: "internal"

services:
  web:
    container_name: django_02_prod
    restart: unless-stopped
    build:
      context: ../../django
      dockerfile: ./compose/prod/Dockerfile
    networks:
      - internal
      - external
    env_file:
      - ./conf/django.env
      - ./conf/sql.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      mqtt:
        condition: service_started
    labels:
      - traefik.enable=true
      - traefik.http.routers.django_02_prod.rule=Host(`02web`)
      - traefik.http.routers.django_02_prod.entrypoints=websecure
      - traefik.http.services.django_02_prod.loadbalancer.server.port=8000

  db:
    image: postgres
    container_name: sql_02_prod
    restart: always
    healthcheck:
          test: ["CMD", "pg_isready", "-U", "devs", "-d", "domena_db"]
          interval: 5s
          timeout: 10s
          retries: 120
    networks:
      - internal
    volumes:
      - ./sql/data/:/var/lib/postgresql/data
    env_file:
      - ./conf/sql.env
    ports:
      - 5432:5432
    
  mqtt:
    image: eclipse-mosquitto:2
    container_name: mqtt_02_prod
    restart: always
    networks:
      - external
    volumes:
      - type: bind 
        source: ./conf/mqtt/config/
        target: /mosquitto/config/
      - type: bind
        source: ./conf/mqtt/log/
        target: /mosquitto/log/
    ports:
      - 1883:1883
      - 9001:9001
    labels:
      - traefik.enable=true
      - traefik.http.routers.mqtt_02_prod.rule=Host(`02web`) && PathPrefix(`/mqtt`)
      - traefik.http.routers.mqtt_02_prod.entrypoints=websecure
      - traefik.http.services.mqtt_02_prod.loadbalancer.server.port=80
